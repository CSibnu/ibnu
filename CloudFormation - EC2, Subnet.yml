---
  AWSTemplateFormatVersion: "2010-09-09"

  Description: "Useline-Stage-Line-VPC"
  Parameters:
    VPCName:
      Description: The name of the VPC being created.
      Type: String
      Default: "Line-VPC"

  Mappings:
    SubnetConfig:
      VPC:
        CIDR: "10.70.0.0/12"
      Public0:
        CIDR: "10.70.1.0/24"
      Public1:
        CIDR: "10.70.2.0/24"
      Public2:
        CIDR: "10.70.3.0/24"
      Private0:
        CIDR: "10.70.4.0/24"
      Private1:
        CIDR: "10.70.5.0/24"
      Private2:
        CIDR: "10.70.6.0/24"
      Private3:
        CIDR: "10.70.7.0/24"
      Private4:
        CIDR: "10.70.8.0/24"
      Private5:
        CIDR: "10.70.9.0/24"
      Private6:
        CIDR: "10.70.10.0/24"
      Private7:
        CIDR: "10.70.11.0/24"
      Private8:
        CIDR: "10.70.12.0/24"   
      Private9:
        CIDR: "10.70.13.0/24"
      Private10:
        CIDR: "10.70.14.0/24" 
      Private11:
        CIDR: "10.70.15.0/24"
      Private12:
        CIDR: "10.70.16.0/24"
      Private13:
        CIDR: "10.70.17.0/24"
      Private14:
        CIDR: "10.70.18.0/24"   
      Private15:
        CIDR: "10.70.19.0/24" 
  Resources:

    VPC:
      Type: "AWS::EC2::VPC"
      Properties:
        EnableDnsSupport: "true"
        EnableDnsHostnames: "true"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "VPC"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Public"
          -
            Key: "Name"
            Value: !Ref 'VPCName'

    PublicSubnet0:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone: "us-east-1a"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Public0"
            - "CIDR"
        MapPublicIpOnLaunch: "true"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Public"
          -
            Key: "Name"
            Value: "Line-Stage-Public-1a"
    PublicSubnet1:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone: "us-east-1b"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Public1"
            - "CIDR"
        MapPublicIpOnLaunch: "true"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Public"
          -
            Key: "Name"
            Value: "Line-Stage-Public-1b"
    PublicSubnet2:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone: "us-east-1c"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Public2"
            - "CIDR"
        MapPublicIpOnLaunch: "true"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Public"
          -
            Key: "Name"
            Value: "Line-Stage-Public-1c"
    PrivateSubnet0:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone: "us-east-1a"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Private0"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: "Line-Stage-Private-1a"

    PrivateSubnet1:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone: "us-east-1b"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Private1"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: "Line-Stage-Private-1b"
    PrivateSubnet2:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone: "us-east-1c"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Private2"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: "Line-Stage-Private-1c"
    PrivateSubnet3:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone: "us-east-1d"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Private3"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: "Line-Stage-Private-1d"
    PrivateSubnet4:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone: "us-east-1e"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Private4"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: "Line-Stage-Private-1e"
    PrivateSubnet5:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone: "us-east-1f"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Private5"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: "Line-Stage-Private-1f"
    PrivateSubnet6:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone: "us-east-1a"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Private6"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: "Line-Stage-Private-6-1a"

    PrivateSubnet7:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone: "us-east-1b"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Private7"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: "Line-Stage-Private-07-1b"
    
    PrivateSubnet8:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone: "us-east-1c"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Private8"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: "Line-Stage-Private-08-1c"

    PrivateSubnet9:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone: "us-east-1d"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Private9"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: "Line-Stage-Private-09-1d"

    PrivateSubnet10:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone: "us-east-1e"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Private410"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: "Line-Stage-Private-10-1e"

    PrivateSubnet11:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone: "us-east-1f"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Private11"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: "Line-Stage-Private-11-1f"
              
    PrivateSubnet12:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone: "us-east-1a"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Private12"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: "Line-Stage-Private-12-1a"

    PrivateSubnet13:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone: "us-east-1b"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Private13"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: "Line-Stage-Private-13-1b"
    
    PrivateSubnet14:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone: "us-east-1c"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Private14"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: "Line-Stage-Private-14-1c"

    PrivateSubnet15:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone: "us-east-1d"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Private15"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Private"
          -
            Key: "Name"
            Value: "Line-Stage-Private-15-1d"

    InternetGateway:
      Type: "AWS::EC2::InternetGateway"
      Properties:
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Public"
          -
            Key: "Name"
            Value: !Join
              - ''
              - - !Ref "VPCName"
                - '-IGW'


    GatewayToInternet:
      Type: "AWS::EC2::VPCGatewayAttachment"
      Properties:
        VpcId:
          Ref: "VPC"
        InternetGatewayId:
          Ref: "InternetGateway"

    PublicRouteTable:
      Type: "AWS::EC2::RouteTable"
      Properties:
        VpcId:
          Ref: "VPC"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Public"
          -
            Key: "Name"
            Value: !Join
              - ''
              - - !Ref "VPCName"
                - '-public-route-table'


    PublicRoute:
      Type: "AWS::EC2::Route"
      DependsOn: "GatewayToInternet"
      Properties:
        RouteTableId:
          Ref: "PublicRouteTable"
        DestinationCidrBlock: "0.0.0.0/0"
        GatewayId:
          Ref: "InternetGateway"

    PublicSubnetRouteTableAssociation0:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PublicSubnet0"
        RouteTableId:
          Ref: "PublicRouteTable"
    PublicSubnetRouteTableAssociation1:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PublicSubnet1"
        RouteTableId:
          Ref: "PublicRouteTable"
    PublicSubnetRouteTableAssociation2:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PublicSubnet2"
        RouteTableId:
          Ref: "PublicRouteTable"

    PublicNetworkAcl:
      Type: "AWS::EC2::NetworkAcl"
      Properties:
        VpcId:
          Ref: "VPC"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Network"
            Value: "Public"
          -
            Key: "Name"
            Value: !Join
              - ''
              - - !Ref "VPCName"
                - '-public-nacl'



    InboundHTTPPublicNetworkAclEntry:
      Type: "AWS::EC2::NetworkAclEntry"
      Properties:
        NetworkAclId:
          Ref: "PublicNetworkAcl"
        RuleNumber: "100"
        Protocol: "-1"
        RuleAction: "allow"
        Egress: "false"
        CidrBlock: "0.0.0.0/0"
        PortRange:
          From: "0"
          To: "65535"

    OutboundPublicNetworkAclEntry:
      Type: "AWS::EC2::NetworkAclEntry"
      Properties:
        NetworkAclId:
          Ref: "PublicNetworkAcl"
        RuleNumber: "100"
        Protocol: "-1"
        RuleAction: "allow"
        Egress: "true"
        CidrBlock: "0.0.0.0/0"
        PortRange:
          From: "0"
          To: "65535"

    PublicSubnetNetworkAclAssociation0:
      Type: "AWS::EC2::SubnetNetworkAclAssociation"
      Properties:
        SubnetId:
          Ref: "PublicSubnet0"
        NetworkAclId:
          Ref: "PublicNetworkAcl"
    PublicSubnetNetworkAclAssociation1:
      Type: "AWS::EC2::SubnetNetworkAclAssociation"
      Properties:
        SubnetId:
          Ref: "PublicSubnet1"
        NetworkAclId:
          Ref: "PublicNetworkAcl"
    PublicSubnetNetworkAclAssociation2:
      Type: "AWS::EC2::SubnetNetworkAclAssociation"
      Properties:
        SubnetId:
          Ref: "PublicSubnet2"
        NetworkAclId:
          Ref: "PublicNetworkAcl"
    ElasticIP0:
      Type: "AWS::EC2::EIP"
      Properties:
        Domain: "vpc"

    NATGateway0:
      Type: "AWS::EC2::NatGateway"
      Properties:
        AllocationId:
          Fn::GetAtt:
            - "ElasticIP0"
            - "AllocationId"
        SubnetId:
          Ref: "PublicSubnet0"

   

    PrivateRouteTable0:
      Type: "AWS::EC2::RouteTable"
      Properties:
        VpcId:
          Ref: "VPC"
        Tags:
          -
            Key: "Name"
            Value: "DR-Prod-Private-RT"

    
    
    PrivateRouteToInternet0:
      Type: "AWS::EC2::Route"
      Properties:
        RouteTableId:
          Ref: "PrivateRouteTable0"
        DestinationCidrBlock: "0.0.0.0/0"
        NatGatewayId:
          Ref: "NATGateway0"
              
    PrivateSubnetRouteTableAssociation0:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PrivateSubnet0"
        RouteTableId:
          Ref: "PrivateRouteTable0"
          
    PrivateSubnetRouteTableAssociation1:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PrivateSubnet1"
        RouteTableId:
          Ref: "PrivateRouteTable0"
    PrivateSubnetRouteTableAssociation2:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PrivateSubnet2"
        RouteTableId:
          Ref: "PrivateRouteTable0"
    PrivateSubnetRouteTableAssociation3:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PrivateSubnet3"
        RouteTableId:
          Ref: "PrivateRouteTable0"
    PrivateSubnetRouteTableAssociation4:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PrivateSubnet4"
        RouteTableId:
          Ref: "PrivateRouteTable0"
    PrivateSubnetRouteTableAssociation5:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PrivateSubnet5"
        RouteTableId:
          Ref: "PrivateRouteTable0"
    PrivateSubnetRouteTableAssociation6:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PrivateSubnet6"
        RouteTableId:
          Ref: "PrivateRouteTable0"
          
    PrivateSubnetRouteTableAssociation7:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PrivateSubnet7"
        RouteTableId:
          Ref: "PrivateRouteTable0"

    PrivateSubnetRouteTableAssociation8:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PrivateSubnet8"
        RouteTableId:
          Ref: "PrivateRouteTable0"

    PrivateSubnetRouteTableAssociation9:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PrivateSubnet9"
        RouteTableId:
          Ref: "PrivateRouteTable0"

    PrivateSubnetRouteTableAssociation10:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PrivateSubnet10"
        RouteTableId:
          Ref: "PrivateRouteTable0"

    PrivateSubnetRouteTableAssociation11:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PrivateSubnet11"
        RouteTableId:
          Ref: "PrivateRouteTable0"

    PrivateSubnetRouteTableAssociation12:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PrivateSubnet12"
        RouteTableId:
          Ref: "PrivateRouteTable0"

    PrivateSubnetRouteTableAssociation13:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PrivateSubnet13"
        RouteTableId:
          Ref: "PrivateRouteTable0"   

    PrivateSubnetRouteTableAssociation14:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PrivateSubnet14"
        RouteTableId:
          Ref: "PrivateRouteTable0"

    PrivateSubnetRouteTableAssociation15:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PrivateSubnet15"
        RouteTableId:
          Ref: "PrivateRouteTable0"    
    
    SecurityGroup1:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
            GroupDescription: "security group 1"
            GroupName: "security group 1"
            Tags: 
              - 
                Key: "Environment"
                Value: "Prod"
            VpcId: 
                Ref: "VPC"
            SecurityGroupIngress: 
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 80
                IpProtocol: "tcp"
                ToPort: 80
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 443
                IpProtocol: "tcp"
                ToPort: 443
    SecurityGroup2:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
            GroupDescription: "security group 2"
            GroupName: "security group 2"
            Tags: 
              - 
                Key: "Environment"
                Value: "Prod"
            VpcId: 
                Ref: "VPC"
            SecurityGroupIngress: 
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 80
                IpProtocol: "tcp"
                ToPort: 80
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 443
                IpProtocol: "tcp"
                ToPort: 443
    SecurityGroup3:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
            GroupDescription: "security group 3"
            GroupName: "VPC-Endpoint-SG"
            Tags: 
              - 
                Key: "Environment"
                Value: "Prod"
            VpcId: 
                Ref: "VPC"
            SecurityGroupIngress: 
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 80
                IpProtocol: "tcp"
                ToPort: 80
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 443
                IpProtocol: "tcp"
                ToPort: 443

  Outputs:

    VPCId:
      Description: "VPCId of VPC"
      Value:
        Ref: "VPC"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-VPC"

    PublicSubnet0:
      Description: "SubnetId of public subnet 0"
      Value:
        Ref: "PublicSubnet0"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-PublicSubnet0"
    PublicSubnet1:
      Description: "SubnetId of public subnet 1"
      Value:
        Ref: "PublicSubnet1"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-PublicSubnet1"
    PublicSubnet2:
      Description: "SubnetId of public subnet 2"
      Value:
        Ref: "PublicSubnet2"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-PublicSubnet2"

    PrivateSubnet0:
      Description: "SubnetId of private subnet 0"
      Value:
        Ref: "PrivateSubnet0"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet0"

    PrivateSubnet1:
      Description: "SubnetId of private subnet 1"
      Value:
        Ref: "PrivateSubnet1"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet1"
    PrivateSubnet2:
      Description: "SubnetId of private subnet 2"
      Value:
        Ref: "PrivateSubnet2"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet2"
    PrivateSubnet3:
      Description: "SubnetId of private subnet 3"
      Value:
        Ref: "PrivateSubnet3"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet3"
    PrivateSubnet4:
      Description: "SubnetId of private subnet 4"
      Value:
        Ref: "PrivateSubnet4"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet4"
    PrivateSubnet5:
      Description: "SubnetId of private subnet 5"
      Value:
        Ref: "PrivateSubnet5"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet5"
    PrivateSubnet6:
      Description: "SubnetId of private subnet 6"
      Value:
        Ref: "PrivateSubnet6"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet6"
    PrivateSubnet7:
      Description: "SubnetId of private subnet 7"
      Value:
        Ref: "PrivateSubnet7"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet7"
    PrivateSubnet8:
      Description: "SubnetId of private subnet 8"
      Value:
        Ref: "PrivateSubnet8"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet8"
    PrivateSubnet9:
      Description: "SubnetId of private subnet 9"
      Value:
        Ref: "PrivateSubnet9"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet9"
    PrivateSubnet10:
      Description: "SubnetId of private subnet 10"
      Value:
        Ref: "PrivateSubnet10"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet10"
    PrivateSubnet11:
      Description: "SubnetId of private subnet 11"
      Value:
        Ref: "PrivateSubnet11"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet11"
    PrivateSubnet12:
      Description: "SubnetId of private subnet 12"
      Value:
        Ref: "PrivateSubnet12"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet12"  
    PrivateSubnet13:
      Description: "SubnetId of private subnet 13"
      Value:
        Ref: "PrivateSubnet13"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet13"
    PrivateSubnet14:
      Description: "SubnetId of private subnet 14"
      Value:
        Ref: "PrivateSubnet14"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet14"
    PrivateSubnet15:
      Description: "SubnetId of private subnet 15"
      Value:
        Ref: "PrivateSubnet15"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet15"                  

    SecurityGroup1:
      Description: "security group 1"
      Value:
        Ref: "SecurityGroup1"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-SecurityGroup1"
    SecurityGroup2:
      Description: "security group 2"
      Value:
        Ref: "SecurityGroup1"
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-SecurityGroup2"

    DefaultSecurityGroup:
      Description: "DefaultSecurityGroup Id"
      Value: !GetAtt VPC.DefaultSecurityGroup
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-DefaultSecurityGroup"
